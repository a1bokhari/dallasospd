ContrailNodeInitDeployment:
  config: |
    ---
    - name: Configuration to be applied puppet configuration started
      connection: local
      hosts: localhost
      tasks:
        - name: set container_cli if undefined
          set_fact:
            container_cli: "podman"
          when: container_cli is not defined

        - name: create contrail containers common directories
          file:
            path: "{{ item }}"
            state: directory
            recurse: yes
          with_items:
            - /etc/contrail
            - /etc/contrail/ssl
            - /var/crashes
            - /var/lib/contrail/plugin_contrail_neutron
            - /var/lib/contrail/plugin_contrail_heat
            - /var/lib/contrail/vrouter_port_control
            - /var/lib/contrail/vif_nova_contrail
            - /var/lib/contrail/vif_nova_contrail_egg
            - /var/lib/contrail/vif_plug_vrouter
            - /var/lib/contrail/vif_plug_contrail_vrouter
            - /var/lib/contrail/config_zookeeper
            - /var/lib/contrail/analytics_zookeeper
            - /var/lib/contrail/config_cassandra
            - /var/lib/contrail/analytics_cassandra_data
            - /var/lib/contrail/analytics_cassandra_commitlog
            - /var/lib/contrail/contrail_control_dns
            - /var/lib/contrail/loadbalancer
            - /var/log/containers/contrail
            - /var/log/containers/contrail/database
            - /var/log/containers/contrail/config-database
            - /var/log/containers/contrail/kafka-zookeeper
            - /var/log/containers/contrail/kafka
            - /var/log/containers/contrail/zookeeper
            - /var/log/containers/contrail/rabbitmq

        - name: create contrail containers ssl directories
          file:
            path: "{{ item.split('/')[0:-1] | join('/') }}"
            state: directory
            seuser: 'system_u'
            serole: 'object_r'
            setype: 'cert_t'
          with_items:
            - "{{ _SERVER_KEYFILE_ }}"
            - "{{ _SERVER_CERTFILE_ }}"
          when:
            - _SERVER_KEYFILE_ is defined
            - _SERVER_CERTFILE_ is defined
            - _SERVER_KEYFILE_ != ""
            - _SERVER_CERTFILE_ != ""

        - name: remove contrail node-init container if exists
          shell: >
            {{ container_cli }} container rm --force $( {{ container_cli }} ps -a --filter 'name=.*contrail-node-init.*' --format "{{'{{'}}.ID{{'}}'}}")

          ignore_errors: yes
      
        - set_fact:
            ssl_enable: "{{ _SSL_ENABLE_ | default('false')}} | bool"

        - set_fact:
            node_init_volumes:
              - /dev:/dev
              - /usr/bin:/host/usr/bin
              - /etc/sysctl.d:/etc/sysctl.d
              - /var/crashes:/var/crashes
              - /var/log/containers/contrail:/var/log/contrail
              - /var/run:/var/run
              - /tmp/:/tmp/

        - set_fact:
            node_init_env_vars:
              INSTALL_PUPPET: "{{ _INSTALL_PUPPET_ }}"
              CONTRAIL_STATUS_IMAGE: "{{ _CONTRAIL_STATUS_IMAGE_ }}"

        - name: Add SSL folder for self-signed cert management
          block:
            - set_fact:
                node_init_volumes: "{{ node_init_volumes + ['/etc/contrail/ssl:/etc/contrail/ssl:z'] }}"

            - set_fact:
                node_init_env_vars: "{{ node_init_env_vars | combine({item.key: item.value}) }}"
              with_items:
                - { key: SSL_ENABLE, value: "{{ _SSL_ENABLE_ }}" }
                - { key: SERVER_KEYFILE, value: "{{ _SERVER_KEYFILE_ }}" }
                - { key: SERVER_CERTFILE, value: "{{ _SERVER_CERTFILE_ }}" }
                - { key: SERVER_CA_CERTFILE, value: "{{ _SERVER_CA_CERTFILE_ }}" }
                - { key: SERVER_CA_KEYFILE, value: "{{ _SERVER_CA_KEYFILE_ }}" }
          when:
            - ssl_enable
            - _SERVER_CA_ != 'IPA'

        - name: Add SSL folder for IPA cert management
          block:
            - set_fact:
                node_init_volumes: "{{ node_init_volumes + ['/etc/contrail/ssl:/etc/contrail/ssl:ro'] }}"

            - set_fact:
                node_init_env_vars: "{{ node_init_env_vars | combine({item.key: item.value}) }}"
              with_items:
                - { key: SERVER_KEYFILE, value: "{{ _SERVER_KEYFILE_ }}" }
                - { key: SERVER_CERTFILE, value: "{{ _SERVER_CERTFILE_ }}" }
                - { key: SERVER_CA_CERTFILE, value: "{{ _SERVER_CA_CERTFILE_ }}" }
          when:
            - ssl_enable
            - _SERVER_CA_ == 'IPA'

        - name: Setup podman insecure registry
          ini_file:
            path: /etc/containers/registries.conf
            section: 'registries.insecure'
            option: 'registries'
            value: "[ '{{ _CONTRAIL_REGISTRY_ }}' ]"
          when: _CONTRAIL_REGISTRY_ != ""

        - name: prepare podman volume args
          set_fact:
            init_volumes_args: "{{ '-v ' + node_init_volumes | join(' -v ') }}"

        - set_fact:
            init_env_args: ''

        - name: prepare podman env args
          set_fact:
            init_env_args: "{{ init_env_args }}  -e  {{ item.key}}={{ item.value }}"
          loop: "{{ node_init_env_vars | dict2items}}"

        - name: create node-init container
          shell: >
            {{ container_cli }} run -t --network host --name "contrail-node-init" --privileged -u root {{ init_volumes_args }} {{ init_env_args }} {{  _CONTRAIL_NODE_INIT_IMAGE_ }}

        - set_fact:
            install_puppet: "{{ _INSTALL_PUPPET_ }} | bool"

        - name: Setup Contrail Tripleo Puppet
          block:
            - name: sleep for 5 sec (looks like a race condition between container execution and next ansible step)
              shell: "sleep 5"

            - name: Lookup Contrail RPM files
              find:
                paths: "/tmp"
                patterns: "contrail-tripleo-puppet*.rpm"
              register: rpm_files

            - name: debug rpm files
              debug:
                msg: "{{ rpm_files.files }}"

            - set_fact:
                rpm_list: "{{ rpm_files.files | map(attribute='path') | list}}"

            - name: debug rpm list
              debug:
                msg: "{{ rpm_list }}"

            - name: Installing the rpm files
              yum:
                name: "{{ rpm_list }}"
                state: present
                disable_gpg_check: 'yes'

            - set_fact:
                puppet_module_dir: "/usr/share/openstack-puppet/modules/tripleo/"

            - set_fact:
                contrail_module_dir: "{{ puppet_module_dir }}/manifests/network/contrail"

            - set_fact:
                contrail_puppet_setup_dir: "/usr/share/contrail-tripleo-puppet"

            - name: Check contrail tripleo puppet module exists.
              stat:
                path: "{{ contrail_module_dir }}"
              register: file_details

            - name: Check contrail tripleo puppet org module exists.
              stat:
                path: "{{ contrail_module_dir }}.org"
              register: file_details_org

            - name: Rename old contrail-tripleo-puppet module in tripleo
              shell: "mv {{ contrail_module_dir }} {{ contrail_module_dir }}.org"
              when:
                - file_details.stat.exists
                - not file_details_org.stat.exists

            - name: Check contrail tripleo puppet module was installed.
              stat:
                path: "{{ contrail_puppet_setup_dir }}"
              register: file_details

            - name: Sync contrail-tripleo-puppet module into tripleo
              shell: "rsync -a {{ contrail_puppet_setup_dir }}/ {{ puppet_module_dir }}"
              when: file_details.stat.exists

          when: install_puppet

        - name: Setup nodedata
          block:
          - name: get system dmi code
            shell: |
                   #!/bin/sh
                   dmidecode --s system-uuid | awk 'match($0, /[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}/) { print substr($0, RSTART, RLENGTH) }'
            register: dmi

          - name: set dmi fact
            set_fact:
              dmi_uuid: "{{ dmi.stdout | lower }}"

          - name: set dmi fact upper
            set_fact:
              dmi_uuid_upper: "{{ dmi.stdout | upper }}"

          - name: set nodedata
            set_fact:
              nodedata: "{{ _NODEDATA_[dmi_uuid] }}"
            when: _NODEDATA_[dmi_uuid] is defined

          - name: set nodedata upper
            set_fact:
              nodedata_upper: "{{ _NODEDATA_[dmi_uuid_upper] }}"
            when: _NODEDATA_[dmi_uuid_upper] is defined

          - name: write nodedata
            copy:
              dest: "/etc/puppet/hieradata/{{ dmi_uuid }}.json"
              content: "{{ nodedata }}"
            when: nodedata is defined

          - name: write nodedata upper
            copy:
              dest: "/etc/puppet/hieradata/{{ dmi_uuid_upper }}.json"
              content: "{{ nodedata_upper }}"
            when: nodedata_upper is defined

          when: _NODEDATA_ is defined

  creation_time: "2021-11-09T23:20:48Z"
  deployment_name: ContrailNodeInitDeployment
  group: ansible
  id: a64a1d75-5e1c-400a-9305-d58e9d06d306
  inputs:
    - name: _CONTRAIL_REGISTRY_
      description: 
      type: String
      value: |-
        hub.juniper.net/contrail-nightly
    - name: _CONTRAIL_NODE_INIT_IMAGE_
      description: 
      type: String
      value: |-
        hub.juniper.net/contrail-nightly/contrail-node-init:21.3.27-ubi
    - name: _CONTRAIL_STATUS_IMAGE_
      description: 
      type: String
      value: |-
        hub.juniper.net/contrail-nightly/contrail-status:21.3.27-ubi
    - name: _SERVER_CA_
      description: 
      type: String
      value: |-
        
    - name: _SERVER_CA_CERTFILE_
      description: 
      type: String
      value: |-
        
    - name: _SERVER_CA_KEYFILE_
      description: 
      type: String
      value: |-
        
    - name: _SERVER_CERTFILE_
      description: 
      type: String
      value: |-
        
    - name: _SERVER_KEYFILE_
      description: 
      type: String
      value: |-
        
    - name: _INSTALL_PUPPET_
      description: 
      type: String
      value: |-
        True
    - name: _NODEDATA_
      description: 
      type: Json
      value: |-
        {}
    - name: _SSL_ENABLE_
      description: None
      type: String
      value: |-
        False
    - name: deploy_server_id
      description: ID of the server being deployed to
      type: String
      value: |-
        914b5a57-67e2-4eb3-9d62-662566891b16
    - name: deploy_action
      description: Name of the current action being deployed
      type: String
      value: |-
        CREATE
    - name: deploy_stack_id
      description: ID of the stack this deployment belongs to
      type: String
      value: |-
        overcloud-ContrailController-k7h6km2blff7-2-ijaxo7cnqqjz-ContrailControllerExtraConfigPre-qgrpec5u7pzo-ContrailNodeInit-fsfl4ikyp5tk-ContrailNodeInitDeployment-5cztdgscquqs/c11ee286-e0c4-4291-be5a-ec4a41805ce7
    - name: deploy_resource_name
      description: Name of this deployment resource in the stack
      type: String
      value: |-
        TripleOSoftwareDeployment
    - name: deploy_signal_transport
      description: How the server should signal to heat with the deployment output values.
      type: String
      value: |-
        NO_SIGNAL
  name: deployment_resource
  options: {}
  outputs:
    - name: result
      description: 
      type: String
