- include_role:
    name: tripleo-redhat-enforce
  name: Enforce RHOSP rules regarding subscription.
  vars:
    skip_rhel_enforcement: 'false'
  when:
  - step|int == 0
  - ansible_facts['distribution'] == 'RedHat'
  - not (skip_rhel_enforcement | bool)
- dnf:
    name: '@{{ item.module }}:{{ item.stream }}/{{ item.profile|default(''common'')
      }}'
    state: present
  loop: '{{ dnf_module_list|list }}'
  name: Ensure DNF modules have the right stream
  vars:
    dnf_module_list: []
  when:
  - step|int == 0
  - ansible_facts['distribution_major_version'] is version('8', '>=')
  - dnf_module_list|length > 0
- name: Check for existing yum.pid
  register: yum_pid_file
  stat: path=/var/run/yum.pid
  when: step|int == 0 or step|int == 3
- fail: msg="ERROR existing yum.pid detected - can't continue! Please ensure there
    is no other package update process for the duration of the minor update worfklow.
    Exiting."
  name: Exit if existing yum process
  when: (step|int == 0 or step|int == 3) and yum_pid_file.stat.exists
- name: Set boolean skip_package_update
  set_fact:
    skip_package_update: false
- block:
  - ignore_errors: true
    name: Log contrail_config_database inspect
    shell: '{{ container_cli }} inspect contrail_config_database > /tmp/contrail_config_database_inspect
      2>&1

      '
  - ignore_errors: true
    name: Find out current volume name of contrail_config_database container for old
      mount path
    register: contrail_config_database_volume_name
    shell: '{{ container_cli }} inspect contrail_config_database | jq -r ''.[].Mounts
      | .[] | select(.Destination =="/var/lib/cassandra/data") | .Name''

      '
  - ignore_errors: true
    name: Log contrail_config_database_volume_name
    shell: 'echo {{ contrail_config_database_volume_name.stdout }} > /tmp/contrail_config_database_volume_name
      2>&1

      '
  - block:
    - ignore_errors: true
      name: Stop previous contrail_config_database container
      shell: '{{ container_cli }} stop contrail_config_database

        '
    - name: Get contrail_config_database_volume_name location
      register: contrail_config_database_volume_location
      shell: '{{ container_cli }} inspect {{ contrail_config_database_volume_name.stdout
        }} | jq -r ''.[].Mountpoint''

        '
    - name: Make contrail_config_database_volume data subfolder
      shell: 'mkdir -p {{ contrail_config_database_volume_location.stdout }}/data

        '
      when: contrail_config_database_volume_location.stdout != ''
    - name: Move contrail_config_database_volume data subfolder
      shell: 'find {{ contrail_config_database_volume_location.stdout }} -maxdepth
        1 -mindepth 1 -path {{ contrail_config_database_volume_location.stdout }}/data
        -o -prune -execdir mv {} {{ contrail_config_database_volume_location.stdout
        }}/data/ \;

        '
      when: contrail_config_database_volume_location.stdout != ''
    - name: Find out commitlog volume for contrail_config_database container for old
        mount path
      register: contrail_config_database_log_volume_name
      shell: '{{ container_cli }} inspect contrail_config_database | jq -r ''.[].Mounts
        | .[] | select(.Destination =="/var/lib/cassandra") | .Name''

        '
    - name: Log contrail_config_database_log_volume_name
      shell: 'echo {{ contrail_config_database_log_volume_name.stdout }} > /tmp/contrail_config_database_log_volume_name
        2>&1

        '
    - block:
      - name: Log contrail_config_database_log_volume inspect
        shell: '{{ container_cli }} inspect {{ contrail_config_database_log_volume_name.stdout
          }} > /tmp/contrail_config_database_log_volume_inspect 2>&1

          '
      - name: Get contrail_config_database_log_volume_name location
        register: contrail_config_database_log_volume_location
        shell: '{{ container_cli }} inspect {{ contrail_config_database_log_volume_name.stdout
          }} | jq -r ''.[].Mountpoint''

          '
      - name: Move commitlog, hints, etc to the new volume
        shell: 'find {{ contrail_config_database_log_volume_location.stdout }} -maxdepth
          1 -mindepth 1 -path {{ contrail_config_database_log_volume_location.stdout
          }}/data -o -prune -execdir mv {} {{ contrail_config_database_volume_location.stdout
          }}/ \;

          '
        when: contrail_config_database_log_volume_location.stdout != ''
      name: Move data  from unnamed volume to new named one
      when: contrail_config_database_log_volume_name.stdout != ''
    name: Move contrail_config_database_volume folders to the data subfolder
    when: contrail_config_database_volume_name.stdout != ''
  name: Update contrail_config_database data
  when:
  - step|int == 0
